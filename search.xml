<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[tampermonkey-and-stylish]]></title>
      <url>http://nengtalk.com/2017/03/11/tampermonkey-and-stylish/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[account security]]></title>
      <url>http://nengtalk.com/2017/03/08/account-security/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[关于安装配置hexo 的那些事]]></title>
      <url>http://nengtalk.com/2017/03/07/something-about-hexo/</url>
      <content type="html"><![CDATA[<p>我觉得以我健忘的特性，如果再不把前两天安装配置hexo 的过程记录下来的话，这个坑可能我就填不上了。所以，这篇文章就用以记录整个安装搭建配置Hexo 的过程吧。</p>
<h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h2><p>用他们自己的话来说就是一个“快速、简洁且高效的博客框架”，因为可以部署到github 和coding 上，所以节省了很多再单独购买服务器的银子以及折腾服务器，备份转移什么的时间，就像kindle也许能让你专注于读书一样，支持Markdown 的Hexo 可以让你专注于写作。</p>
<h2 id="安装前的准备"><a href="#安装前的准备" class="headerlink" title="安装前的准备"></a>安装前的准备</h2><p>在安装Hexo 之前要先装好两样东西，Node.js 以及Git</p>
<h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>对于Windows 用户来说，直接去<a href="https://nodejs.org/zh-cn/" target="_blank" rel="external">Node.js</a> 的官网下载并安装就好了，对于普通用户来说，使用推荐的版本按照推荐的安装方式安装就好了。</p>
<p>对于其他用户来说，还是直接去<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="external">Node.js</a> 的下载页面去一探究竟吧，或者可以使用cURL/Wget 进行安装。</p>
<p><code>$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code><br>或者<br><code>$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code><br>重启终端，然后执行下面这行命令<br><code>$ nvm install stable</code></p>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>对于Windows 用户而言，可以到<a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git for windows</a> 里直接下载安装相应的版本就好了，在日常使用中，我觉得里面的Git Bash就已经足够方便和好用了，里面涉及的一些关于Hexo 的命令一会儿再说。</p>
<p>其他用户还是去参考官网的详细说明吧。</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>在硬盘上新建一个文件夹，比如Hexo，进去之后右键”Git Bash here” 打开git bash 终端，然后就可以开始安装Hexo 了。依次执行以下命令：<br><code>$ npm install -g hexo-cli</code><br><code>hexo init</code><br><code>npm install</code></p>
<p>这样Hexo 就已经在本机上安装好了。这里面的_config.yml 文件是网站的配置文件，后面会说，source 里面存放着网站的核心内容，比如发布的文章都在source下的_posts 里面，themes 里面放着主题文件。</p>
<p>继续执行<br><code>hexo s</code><br>然后打开浏览器，访问<a href="localhost:4000" target="_blank" rel="external">localhost:4000</a>，就可以看到在本地运行的Hexo 了。</p>
<h2 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h2><p>常用的Hexo 的命令不是很多，都可以在Git Bash 下面执行</p>
<p><code>hexo s</code><br>启动本地服务器，可以在本地对于网站进行调试<br><code>hexo g</code><br>生成静态文件<br><code>hexo d</code><br>部署网站<br><code>hexo new &#39;title&#39;</code><br>新建一篇标题为title 的文章<br><code>hexo clean</code><br>清除缓存文件</p>
<p>其他的命令及参数设置的话可以到<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="external">指令</a> 页面查看。</p>
<h2 id="同时在github-com-和coding-net-上部署及绑定域名"><a href="#同时在github-com-和coding-net-上部署及绑定域名" class="headerlink" title="同时在github.com 和coding.net 上部署及绑定域名"></a>同时在github.com 和coding.net 上部署及绑定域名</h2><p>由于某些原因，国内访问github不是那么顺畅，而且百度不会抓取github 的页面，所以可以考虑在github和coding 部署上同时部署Hexo，并通过配置让国内用户访问coding.net 里的地址，让国外用户访问github.com 里的内容。</p>
<ol>
<li>在source 文件夹内打开git bash，执行命令<br><code>touch Staticfile</code></li>
<li>注册<a href="https://github.com/" target="_blank" rel="external">Github</a> 账号和<a href="https://coding.net/" target="_blank" rel="external">coding</a> 账号。这里有个小建议，可以使用同一个邮箱账号注册，后面执行ssh操作的时候会方便很多。</li>
<li>在github 中新建名字格式为 username.github.io，属性为public 的repository</li>
<li>在coding 中新建一个公共项目，将设置中的部署来源选择为master 分支</li>
<li>修改hexo 文件夹内的_config.yml 配置文件中的deploy 部分<br><code>deploy:
type: git
repo: 
 github: https://github.com/youraddress,master
 coding: https://git.coding.net/youraddress,master</code></li>
<li>配置ssh。执行命令<br><code>ssh-keygen -t rsa -C &quot;your email address&quot;</code> 注意这里是你注册github和coding的邮箱<br><code>ssh-agent -s</code><br><code>ssh-add ~/.ssh/id_rsa</code></li>
</ol>
<p>如果这里报错”Could not open a connection to your authentication agent”的话，不妨执行<br><code>eval &#39;ssh-agent -s&#39;</code><br><code>ssh-add</code></p>
<p>接下来，执行<br><code>clip &lt; ~/.ssh/id_rsa.pub</code><br>复制好ssh key的内容，分别粘贴到github 和coding 的ssh key 设置中去，基本上就大功告成了。</p>
<ol>
<li><p>安装hexo-deployer-git 插件<br><code>npm install hexo-deployer-git --save</code><br>执行命令<br><code>hexo d -g</code><br>按提示输入账号密码就可以把本地的hexo部署到网络上了，通过注册时得到的github和coding的二级域名就可以访问了。<br>如果这里出现问题的话，在确保github能够正常访问的情况下，一般可能的解决办法是到控制面板中访问用户账户-管理网络证书-删除现有的github或者coding的账号就可以了。</p>
</li>
<li><p>绑定个人域名<br>在source 文件夹内新建一个CNAME文件，注意没有扩展名，在文件中写入你的自定义域名，部署之后添加一个CNAME解析就可以了。</p>
</li>
</ol>
<h2 id="通过DNSPOD-进行国内外的分流"><a href="#通过DNSPOD-进行国内外的分流" class="headerlink" title="通过DNSPOD 进行国内外的分流"></a>通过DNSPOD 进行国内外的分流</h2><p>DNSPOD 可以自动将国内和国外的访问进行分流，首先你需要把你的个人域名根据服务商的说明解析到DNSPOd，然后在DNSPOD内添加两条CNAME，分别对应国内和国外就可以了。<br><img src="https://cl.ly/1I3p1F3y1T3s/TIM%E6%88%AA%E5%9B%BE20170308143940.png" alt="DNSPOD setting"></p>
<h2 id="提交搜索引擎-Google-amp-Baidu"><a href="#提交搜索引擎-Google-amp-Baidu" class="headerlink" title="提交搜索引擎(Google &amp; Baidu)"></a>提交搜索引擎(Google &amp; Baidu)</h2><h3 id="Google-搜索"><a href="#Google-搜索" class="headerlink" title="Google 搜索"></a>Google 搜索</h3><ol>
<li>访问<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="external">Google Search Console</a>，输入自己的域名后把验证文件复制到theme下的source文件夹内上传并验证。</li>
<li>安装sitemap 生成插件<br><code>npm install hexo-generator-baidu-sitemap --save</code></li>
<li>在_config.yml 中添加配置代码<br><code>sitemap:
path: sitemap.xml</code></li>
<li>提交sitemap</li>
</ol>
<h3 id="百度搜索"><a href="#百度搜索" class="headerlink" title="百度搜索"></a>百度搜索</h3><ol>
<li>访问<a href="http://zhanzhang.baidu.com/linksubmit/url" target="_blank" rel="external">百度站长工具</a>, 输入自己的域名完成验证。</li>
<li>安装sitemap 生成插件<br><code>npm install hexo-generator-sitemap --save</code></li>
<li>在_config.yml 中添加配置代码<br><code>baidusitemap:
path: baidusitemap.xml</code></li>
<li>提交sitemap</li>
</ol>
<h2 id="安装主题及相关配置"><a href="#安装主题及相关配置" class="headerlink" title="安装主题及相关配置"></a>安装主题及相关配置</h2><p>在官方的<a href="https://hexo.io/themes/" target="_blank" rel="external">主题仓库</a>中有很多制作精美的主题，比如大名顶顶的<a href="http://notes.iissnan.com/" target="_blank" rel="external">Next</a>等等，安装方法和使用说明在各自的主页中也都有详细的介绍。我现在使用的主题是<a href="https://material.viosey.com/" target="_blank" rel="external">Material</a> ，制作精美，风格也深得我心。</p>
<p><code>$ cd your-hexo-site/themes
$ git clone https://github.com/viosey/hexo-theme-material.git material</code></p>
<p>安装主题后在_config.yml 中把theme 修改为material，设置好语言就可以了。</p>
<p>更多的主题设置可以参考官方的<a href="https://material.viosey.com/intro/" target="_blank" rel="external">说明</a>。</p>
<ul>
<li>我的首页中的图片调用了一个萨摩公园写的Bing 每日一图的<a href="https://i-meto.com/bing-api/" target="_blank" rel="external">API</a>，正常情况下每次访问题图都会有变化。</li>
</ul>
<h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>简单就先记录这么多吧，该涉及到的点好像似乎大概可能都已经涉及到了，没有的欢迎在下面的评论区给我留言~</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo 官方网站</a></li>
<li><a href="http://tengj.top/2016/02/20/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E6%80%BB%E7%BA%B2%EF%BC%89%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%88%9D%E8%A1%B7/" target="_blank" rel="external">hexo干货系列：（总纲）搭建独立博客初衷</a></li>
<li><a href="https://material.viosey.com/" target="_blank" rel="external">Material theme</a></li>
<li><a href="http://svend.cc/posts/22980/" target="_blank" rel="external">Hexo系列：（四）Hexo博客提交百度和Google收录</a></li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://nengtalk.com/2017/03/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server
</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate
</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy
</code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[也说老罗的锤子——钱途不够光明，但至少还有希望]]></title>
      <url>http://nengtalk.com/2013/03/29/about-smartisan-with-hope-without-money/</url>
      <content type="html"><![CDATA[<p>你们谁借我一锤子。在熬完老罗将近三个小时的发布会之后，我彻底无奈了，沉淀了两天，今天也来说说老罗的锤子。（听说周一要出高清视频了，先写着吧，没准写写就脱到周一了，有错误到时候再说，话说剪完还大约两个小时，真愁人）<a id="more"></a></p>
<p>想了又想，还是决定不把那个弯了的锤子当成题图，以表达我对锤子尚存的一线希望。</p>
<p>老乔当年的每场发布会都会做充足的准备，保证发布会的完美，老罗也是这么想的，可是他在发布会还没开始就搞砸了，不说他有中国特色的迟到了大约二十分钟之外，他选的会场居然拙计到没有信号发不出消息，当我在电脑前看到那些在会场的媒体人发回开始短信直播的字样后表情是何等的尴尬，当然这在另一方面也说明了微信神马的还不能完全取代短信。话说为了这篇文章，我翻出了发布会的<a href="http://www.21cbh.com/HTML/2013-3-28/4NMDQ1XzY1MDM4Nw.html" target="_blank" rel="external">文字实录</a>，一点一点的说吧。</p>
<p><strong>跳票</strong></p>
<p>经历过一次跳票之后的老罗明显是不希望再次听到这个字眼，所以他迫不及待的拿出了他的半成品，一个估计是用了一大半的时间在画图标的半成品。他在用七天完成一个语音系统来表示他们的效率之高么？老罗的自尊经不起再一次跳票的打击。</p>
<blockquote>
<p>我们出来做点事情，你也知道大家都会说一些难听的话，别人成功的时候他在那嫉妒，别人失败的时候他在那高兴。<br><strong>怎样设计一个牛逼的手机系统</strong></p>
</blockquote>
<p>我不认为老罗给这个问题提供了一个完整的答案，但至少他提供了一个很好的思路，一个每个厂商都在努力去实现的思路——打造优秀的用户体验，但优秀的体验并不是嘴上说说，需要一点点的实现，当然，还有各家有点的整合。</p>
<p><strong>图标</strong></p>
<p>老罗给这个问题的第一点答案，估计这也是他们团队耗时最长的一块吧，老罗上来就狠狠的批斗了圆角矩形图标，估计他还没来的及看Android的原生图标是什么样子的，或者他认为观众们没看过，所以他把高度拟物化的图标从苹果的圆角矩形里面解放了出来，有了形状各异的图标，包括肉肉的熊爪，卖萌的海豚等等等等，据说已经画了300多个了，而且目标是1000个。</p>
<p><img src="https://farm9.staticflickr.com/8590/16598449056_e5a88bb7d5_z.jpg" alt="83"></p>
<p>说实话当我第一眼看到Chrome图标和现场发回的图之后是多么的厌恶，直到看到这张老罗的官方图才略微的平静了下来，我想起来几年前还在用Java机时候的界面，9宫的图标，的确是够清晰，可是不知道在5寸多个屏幕上这孤零零的几个图标是多么的寂寞。</p>
<blockquote>
<p>所有用风景图片做默认壁纸的厂商都是土包子。</p>
</blockquote>
<p>倒是很喜欢老罗的这种机关枪扫射，因为他知道这肯定伤不到自己，雷军当年说，没有设计便是最好的设计，到老罗这儿，就是没有壁纸就是最好的壁纸。黑色，边框，够简洁，够使用。（我估计我在这儿理解错了，以后再看）</p>
<p><img src="https://farm9.staticflickr.com/8683/16598449176_15f50e912a_z.jpg" alt="84"></p>
<p>图标是挺好看（我没说那个大长脸的神庙逃脱），尊重设计师的做法也非常值得赞扬，但是不知道老罗考虑没考虑多各门各派图标放到一起之后的协调性，或者老罗追求的就是这种不和谐。</p>
<p><strong>细节</strong></p>
<p>老罗站在科技与人文的十字路口，用一颗工匠的心去雕琢这个系统，因为用心，所以在细节上就有了更多的人文色彩，包括15秒的秒针延时，包括通讯录的排序方式，包括短信的3秒延时发送，也包括语言选择时候的国旗的展现方式，包括音量调节时候的亮度调整，包括阴历和天气的显示，包括拍摄录像的按键分离，也包括类path的扇形设计，总计，老罗是在用他工匠一般的心态，集百家之所长，去雕琢这个系统。尽管，尽管许多的细节上的改进大多都不会被用到。</p>
<p>说到电话和短信，不得不说的就是MIUI了，我曾经在MIUI和原生之间不断地徘徊，最终选择了MIUI的最大原因就是MIUI的非常人性化的电话和短信设计，以及其他常用小程序的设计和整合，MIUI每周的更新都会给我极大的吸引，直到里程碑不再被MIUI兼容。MIUI的人性化本地化设计是老罗追求的，老罗的细节上的改进可以预见也会在不久的将来被MIUI所吸收，成为MIUI千余项改进之一。</p>
<p><strong>Launcher</strong></p>
<p>光看文字描述我无法体会到Launcher的强大，所以特意去找了一下<a href="http://v.youku.com/v_show/id_XNTMzODgwMjE2.html" target="_blank" rel="external">视频demo</a>，看完不得不赞叹锤子团队在底层设计上之用心，的的确确是独一无二的，我甚至怀疑老罗的九宫格设计完全是为了这个launcher而打造。这个底层交互的设计足够惊艳。在这一点上，锤子超越了主题而存在。他们对Android launcher的理解也上升了一个等级，也给其他人打开了思路。有人说这个像黑莓，好吧，我没用过，不清楚……</p>
<p><img src="https://farm9.staticflickr.com/8672/16417116337_b104582416_o.jpg" alt="85"></p>
<p><strong>语音识别系统</strong></p>
<p>语音这个东西到底应该怎么做，Siri打了个样，之后所有的人也就跟样学样了，老罗想创新，但他也不知道从何做起了，于是他选择了按功能进行语音处理，他选择了调动各感应器进行识别，可是，他忽视了识别的准确性——这一远远还没有被解决的问题。其实，随着微信这种东西的普及，人们也渐渐习惯了对着手机说这种形式，满大街带着耳机看似自言自语也都无所谓了，在识别率还没上去之前，还是让人看着慢慢来吧，手机放在耳朵上直接喊名字，天知道这个电话会打到谁那儿去。当然，老罗他们能在离线识别上有所突破时最好不过的了。</p>
<blockquote>
<p>我坚信今后拨打电话的图标会从桌面上消失。</p>
</blockquote>
<p><strong>One more thing</strong></p>
<p>关于锁屏，包括Apple、Google在内，大家都在研究怎么对锁屏界面加以修改，或者往上面放拍照图标，或者把一些应用摆到锁屏界面，让锁屏不知是锁屏，老罗的解决办法更干脆，留一个开屏动画就够了，而开屏动画的壁纸是你可以自己设置的。</p>
<p>关于字体，老罗在努力。</p>
<p>还有关于什么来着，一时半会儿我也想不起来了，现就这样吧</p>
<blockquote>
<p>明知道油炸食品有害，还去吃，吃完以后还骂人家企业是不良企业的，都是流氓。</p>
</blockquote>
<p>老罗在用他的工匠之心去打造属于他的ROM，他的ROM，他的手机或许受众不会很广，但我还是会对老罗留有一丝期待，这份期待是在看完了那段Launcher演示之后产生的。也许这次的作品比不上ios 1，也许比不上最初的MIUI，但这个基于CM 的ROM（OS？哦，好吧，反正我没说是主题），但老罗给了人们一些启示。</p>
<blockquote>
<p>罗伯特当年搞蒸汽船，很多人都说他肯定会失败。结果展示那天，他们观众眼睁睁的看着船就开起来了。开起来之后他们又说船停不下来，结果船停下来了。我也想说，你等着！不喜欢我张扬性格的中国人，你等着。我会用下半生随手就气死你。</p>
</blockquote>
<p>有人说，<strong>你们都以为我是做手机的，其实我是做rom的。你们都以为我是做rom的，其实我是卖门票的。你们都以为我是卖门票的，其实我是个做图标的。你们都以为我是做图标的，其实我是来玩脑筋急转弯的。</strong>我不敢苟同，这个ROM的钱途不够光明，但至少还有希望。</p>
<p>最后的最后，我不会买老罗的锤子手机，但如果可能，我会亲手体验这个系统。老罗一直在说封闭，可是这个ROM是基于CM的……</p>
]]></content>
      
        <categories>
            
            <category> 科技 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 手机 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
