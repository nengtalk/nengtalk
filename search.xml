<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[account security]]></title>
      <url>http://nengtalk.com/2017/03/08/account-security/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[关于安装配置hexo 的那些事]]></title>
      <url>http://nengtalk.com/2017/03/07/something-about-hexo/</url>
      <content type="html"><![CDATA[<p>我觉得以我健忘的特性，如果再不把前两天安装配置hexo 的过程记录下来的话，这个坑可能我就填不上了。所以，这篇文章就用以记录整个安装搭建配置Hexo 的过程吧。</p>
<h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h2><p>用他们自己的话来说就是一个“快速、简洁且高效的博客框架”，因为可以部署到github 和coding 上，所以节省了很多再单独购买服务器的银子以及折腾服务器，备份转移什么的时间，就像kindle也许能让你专注于读书一样，支持Markdown 的Hexo 可以让你专注于写作。</p>
<h2 id="安装前的准备"><a href="#安装前的准备" class="headerlink" title="安装前的准备"></a>安装前的准备</h2><p>在安装Hexo 之前要先装好两样东西，Node.js 以及Git</p>
<h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>对于Windows 用户来说，直接去<a href="https://nodejs.org/zh-cn/" target="_blank" rel="external">Node.js</a> 的官网下载并安装就好了，对于普通用户来说，使用推荐的版本按照推荐的安装方式安装就好了。</p>
<p>对于其他用户来说，还是直接去<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="external">Node.js</a> 的下载页面去一探究竟吧，或者可以使用cURL/Wget 进行安装。</p>
<p><code>$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code><br>或者<br><code>$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code><br>重启终端，然后执行下面这行命令<br><code>$ nvm install stable</code></p>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>对于Windows 用户而言，可以到<a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git for windows</a> 里直接下载安装相应的版本就好了，在日常使用中，我觉得里面的Git Bash就已经足够方便和好用了，里面涉及的一些关于Hexo 的命令一会儿再说。</p>
<p>其他用户还是去参考官网的详细说明吧。</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>在硬盘上新建一个文件夹，比如Hexo，进去之后右键”Git Bash here” 打开git bash 终端，然后就可以开始安装Hexo 了。依次执行以下命令：<br><code>$ npm install -g hexo-cli</code><br><code>hexo init</code><br><code>npm install</code></p>
<p>这样Hexo 就已经在本机上安装好了。这里面的_config.yml 文件是网站的配置文件，后面会说，source 里面存放着网站的核心内容，比如发布的文章都在source下的_posts 里面，themes 里面放着主题文件。</p>
<p>继续执行<br><code>hexo s</code><br>然后打开浏览器，访问<a href="localhost:4000" target="_blank" rel="external">localhost:4000</a>，就可以看到在本地运行的Hexo 了。</p>
<h2 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h2><p>常用的Hexo 的命令不是很多，都可以在Git Bash 下面执行</p>
<p><code>hexo s</code><br>启动本地服务器，可以在本地对于网站进行调试<br><code>hexo g</code><br>生成静态文件<br><code>hexo d</code><br>部署网站<br><code>hexo new &#39;title&#39;</code><br>新建一篇标题为title 的文章<br><code>hexo clean</code><br>清除缓存文件</p>
<p>其他的命令及参数设置的话可以到<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="external">指令</a> 页面查看。</p>
<h2 id="同时在github-com-和coding-net-上部署及绑定域名"><a href="#同时在github-com-和coding-net-上部署及绑定域名" class="headerlink" title="同时在github.com 和coding.net 上部署及绑定域名"></a>同时在github.com 和coding.net 上部署及绑定域名</h2><p>由于某些原因，国内访问github不是那么顺畅，而且百度不会抓取github 的页面，所以可以考虑在github和coding 部署上同时部署Hexo，并通过配置让国内用户访问coding.net 里的地址，让国外用户访问github.com 里的内容。</p>
<ol>
<li>在source 文件夹内打开git bash，执行命令<br><code>touch Staticfile</code></li>
<li>注册<a href="https://github.com/" target="_blank" rel="external">Github</a> 账号和<a href="https://coding.net/" target="_blank" rel="external">coding</a> 账号。这里有个小建议，可以使用同一个邮箱账号注册，后面执行ssh操作的时候会方便很多。</li>
<li>在github 中新建名字格式为 username.github.io，属性为public 的repository</li>
<li>在coding 中新建一个公共项目，将设置中的部署来源选择为master 分支</li>
<li>修改hexo 文件夹内的_config.yml 配置文件中的deploy 部分<br><code>deploy:
type: git
repo: 
 github: https://github.com/youraddress,master
 coding: https://git.coding.net/youraddress,master</code></li>
<li>配置ssh。执行命令<br><code>ssh-keygen -t rsa -C &quot;your email address&quot;</code> 注意这里是你注册github和coding的邮箱<br><code>ssh-agent -s</code><br><code>ssh-add ~/.ssh/id_rsa</code></li>
</ol>
<p>如果这里报错”Could not open a connection to your authentication agent”的话，不妨执行<br><code>eval &#39;ssh-agent -s&#39;</code><br><code>ssh-add</code></p>
<p>接下来，执行<br><code>clip &lt; ~/.ssh/id_rsa.pub</code><br>复制好ssh key的内容，分别粘贴到github 和coding 的ssh key 设置中去，基本上就大功告成了。</p>
<ol>
<li><p>安装hexo-deployer-git 插件<br><code>npm install hexo-deployer-git --save</code><br>执行命令<br><code>hexo d -g</code><br>按提示输入账号密码就可以把本地的hexo部署到网络上了，通过注册时得到的github和coding的二级域名就可以访问了。<br>如果这里出现问题的话，在确保github能够正常访问的情况下，一般可能的解决办法是到控制面板中访问用户账户-管理网络证书-删除现有的github或者coding的账号就可以了。</p>
</li>
<li><p>绑定个人域名<br>在source 文件夹内新建一个CNAME文件，注意没有扩展名，在文件中写入你的自定义域名，部署之后添加一个CNAME解析就可以了。</p>
</li>
</ol>
<h2 id="通过DNSPOD-进行国内外的分流"><a href="#通过DNSPOD-进行国内外的分流" class="headerlink" title="通过DNSPOD 进行国内外的分流"></a>通过DNSPOD 进行国内外的分流</h2><p>DNSPOD 可以自动将国内和国外的访问进行分流，首先你需要把你的个人域名根据服务商的说明解析到DNSPOd，然后在DNSPOD内添加两条CNAME，分别对应国内和国外就可以了。<br><img src="https://cl.ly/1I3p1F3y1T3s/TIM%E6%88%AA%E5%9B%BE20170308143940.png" alt="DNSPOD setting"></p>
<h2 id="提交搜索引擎-Google-amp-Baidu"><a href="#提交搜索引擎-Google-amp-Baidu" class="headerlink" title="提交搜索引擎(Google &amp; Baidu)"></a>提交搜索引擎(Google &amp; Baidu)</h2><h3 id="Google-搜索"><a href="#Google-搜索" class="headerlink" title="Google 搜索"></a>Google 搜索</h3><ol>
<li>访问<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="external">Google Search Console</a>，输入自己的域名后把验证文件复制到theme下的source文件夹内上传并验证。</li>
<li>安装sitemap 生成插件<br><code>npm install hexo-generator-baidu-sitemap --save</code></li>
<li>在_config.yml 中添加配置代码<br><code>sitemap:
path: sitemap.xml</code></li>
<li>提交sitemap</li>
</ol>
<h3 id="百度搜索"><a href="#百度搜索" class="headerlink" title="百度搜索"></a>百度搜索</h3><ol>
<li>访问<a href="http://zhanzhang.baidu.com/linksubmit/url" target="_blank" rel="external">百度站长工具</a>, 输入自己的域名完成验证。</li>
<li>安装sitemap 生成插件<br><code>npm install hexo-generator-sitemap --save</code></li>
<li>在_config.yml 中添加配置代码<br><code>baidusitemap:
path: baidusitemap.xml</code></li>
<li>提交sitemap</li>
</ol>
<h2 id="安装主题及相关配置"><a href="#安装主题及相关配置" class="headerlink" title="安装主题及相关配置"></a>安装主题及相关配置</h2><p>在官方的<a href="https://hexo.io/themes/" target="_blank" rel="external">主题仓库</a>中有很多制作精美的主题，比如大名顶顶的<a href="http://notes.iissnan.com/" target="_blank" rel="external">Next</a>等等，安装方法和使用说明在各自的主页中也都有详细的介绍。我现在使用的主题是<a href="https://material.viosey.com/" target="_blank" rel="external">Material</a> ，制作精美，风格也深得我心。</p>
<p><code>$ cd your-hexo-site/themes
$ git clone https://github.com/viosey/hexo-theme-material.git material</code></p>
<p>安装主题后在_config.yml 中把theme 修改为material，设置好语言就可以了。</p>
<p>更多的主题设置可以参考官方的<a href="https://material.viosey.com/intro/" target="_blank" rel="external">说明</a>。</p>
<ul>
<li>我的首页中的图片调用了一个萨摩公园写的Bing 每日一图的<a href="https://i-meto.com/bing-api/" target="_blank" rel="external">API</a>，正常情况下每次访问题图都会有变化。</li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo 官方网站</a></li>
<li><a href="http://tengj.top/2016/02/20/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E6%80%BB%E7%BA%B2%EF%BC%89%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%88%9D%E8%A1%B7/" target="_blank" rel="external">hexo干货系列：（总纲）搭建独立博客初衷</a></li>
<li><a href="https://material.viosey.com/" target="_blank" rel="external">Material theme</a></li>
<li><a href="http://svend.cc/posts/22980/" target="_blank" rel="external">Hexo系列：（四）Hexo博客提交百度和Google收录</a></li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://nengtalk.com/2017/03/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server
</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate
</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy
</code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
